from collections import deque
T = int(input())

dx = [-1,1,0,0]
dy = [0,0,-1,1]

def bfs(matrix,x,y):

  queue = deque()
  queue.append((x,y))
  matrix[x][y]=0

  while queue:
    x,y = queue.popleft()
    
    for i in range(4):
      nx = x+dx[i]
      ny = y+dy[i]

      if (nx<0 or ny<0 or nx>n-1 or ny>m-1):
        continue
      if (matrix[nx][ny]==0):
        continue
      if (matrix[nx][ny]==1):
        queue.append((nx,ny))
        matrix[nx][ny]=0    


for t in range(T):
  count=0
  m,n,k = map(int, input().split())
  matrix=[[0]*m for _ in range(n)]
  for _ in range(k):
    y,x = map(int, input().split())
    matrix[x][y] = 1
  
  for j in range(n):
    for k in range(m):
      if matrix[j][k] == 1:
        bfs(matrix,j,k)
        count+=1

  print(count)
