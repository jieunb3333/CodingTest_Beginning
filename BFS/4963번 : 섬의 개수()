from collections import deque

dx=[0,0,1,-1,1,1,-1,-1]
dy=[1,-1,0,0,1,-1,-1,1]

def bfs(x,y):
  
  queue = deque()
  visited[x][y]=1
  queue.append((x,y))

  while queue:
    x,y=queue.popleft()
    
    for n in range(8):
      nx = x+dx[n]
      ny = y+dy[n]
      if nx<0 or nx>h-1 or ny<0 or ny>w-1:
        continue
      if visited[nx][ny]==0 and matrix[nx][ny]==1:
        queue.append((nx,ny))
        visited[nx][ny]=1
  

while True:
  w,h = map(int, input().split())
  if w==0 and h==0:
    break

  matrix = []
  for i in range(h):
    matrix.append(list(map(int,input().split())))
  
  visited=[[0]*w for _ in range(h)]
  island_count=0

  for j in range(h):
    for k in range(w):
      if matrix[j][k]==1 and visited[j][k]==0: 
        # 땅이고 아직 방문하지 않았다면 방문하기.
        bfs(j,k)
        island_count+=1

  print(island_count)
